# -*- coding: utf-8 -*-
"""Task 1 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BDIOJ2elrxjT1cIzUv4j-IX_3_Yof3MC

**Importing Libraries Required**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as mtp

"""**Importing Dataset**"""

data=pd.read_csv("http://bit.ly/w-data")
data

"""**Plotting The Data On Graph**"""

data.plot(x = 'Hours', y = 'Scores', style = 'o' )
mtp.title('Study Time v/s Score')
mtp.xlabel('Study Time in (Hours)')
mtp.ylabel('Score in (%)')
mtp.show()

"""From the above graph we can understand that the score is increasing with the the number of hours of study hence there is a positive linear relation.

Preparing the data for traing and testing purpose
"""

x = data.iloc[:, :-1].values 
y = data.iloc[:, 1].values

from sklearn.model_selection import train_test_split  
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

from sklearn.linear_model import LinearRegression  
regressor = LinearRegression()  
regressor.fit(x_train, y_train) 
print("Model Training Is Done")

line = regressor.coef_*x+regressor.intercept_
mtp.scatter(x, y)
mtp.plot(x, line);
mtp.show()

"""**Predicting the outcome**"""

print(x_test)
y_pred = regressor.predict(x_test)

d=pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
d

"""**Checking the predicted score for the hour other than the values in dataset**"""

hours = 9.25
pred1 = regressor.predict([[hours]])
print(pred1)

"""**Evaluating the model Using RMSE**"""

import math
import sklearn.metrics
MSE = sklearn.metrics.mean_squared_error(y_test, y_pred)
RMSE = math.sqrt(MSE)
print("Root Mean Squared Error : ", RMSE)